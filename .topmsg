From: Florian Westphal <fw@strlen.de>
Subject: [PATCH] mptcp: sendmsg: transmit on backup if other subflows have been closed

Currently we always pick the first ssk on the list and then have
mptcp_sendmsg_frag wait until more space becomes available in case that
ssk has no write space available.

Instead check the first subflow on the list.  If no more write space
is available, then we need to either return -EAGAIN to userspace (nonblock
case), or we need to wait until a subflow becomes available.

This is done by blocking the current thread via sk_stream_wait_memory()
and then make the subflow sk_write_space() unblock the parent mptcp socket.

We can't acquire the mptcp socket lock from the subflow callbacks, but
we can use the mptcp_sk->flags -- MPTCP_SEND_SPACE flag is added for this
purpose.  If it gets set, then at least one subflow has become available for
writing.

v1: dumb-down the selection: just pick the first ssk on the list and make
mptcp socket block if it has no wspace.
Backup is only used if no non-backup subflow exists.

v2: avoid another while loop and fold !ssk condition with wmem check
    on parent mptcp socket (Paolo).

Signed-off-by: Florian Westphal <fw@strlen.de>
