name: "Notifications"
on:
  push:
    tags:
      - 'export/**'   # exclude patchew/** tags and branches
  issues:
    types: [opened, reopened, closed, assigned, unassigned]
  workflow_run:
    workflows: ["MPTCP Upstream Build Validation", "Update TopGit tree"]
    types:
      - completed
  check_suite:
    types:
      - completed

jobs:
  tag:
    name: "Tag"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: tag shortner
        id: tag
        run: |
          echo "::set-output name=tag::${REF:10}"
        env:
          REF: ${{ github.event.ref }}
      - name: irc tag
        uses: rectalogic/notify-irc@v1
        with:
          server: irc.libera.chat
          channel: "#mptcp-ci"
          nickname: gh-tag-bot
          message: "New tag available: ${{ steps.tag.outputs.tag }} (by ${{ github.actor }})"

  issues:
    name: "Issues"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: issue info
        id: info
        if: github.event.action != 'opened'
        run: |
          echo "::set-output name=opener::, opened by ${OPENER}"
          echo "::set-output name=assignee::${ASSIGNEE:+ and assigned to ${ASSIGNEE}}"
        env:
          OPENER: ${{ github.event.issue.user.login }}
          ASSIGNEE: ${{ github.event.assignee.login }}
      - name: irc issues
        uses: rectalogic/notify-irc@v1
        with:
          server: irc.libera.chat
          channel: "#mptcp"
          nickname: gh-issues-bot
          message: |-
            Issue #${{ github.event.issue.number }} ("${{ github.event.issue.title }}"${{ steps.info.outputs.opener }}${{ steps.info.outputs.assignee }}) has been ${{ github.event.action }} by ${{ github.actor }}
            ${{ github.event.issue.html_url }}

  build:
    name: "Build"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'workflow_run' && github.event.workflow_run.name == 'MPTCP Upstream Build Validation' && startsWith(github.event.workflow_run.head_branch, 'export/')
    runs-on: ubuntu-latest
    steps:
      - name: irc build
        uses: rectalogic/notify-irc@v1
        with:
          server: irc.libera.chat
          channel: "#mptcp-ci"
          nickname: gh-build-bot
          message: |-
            New build validating ${{ github.event.workflow_run.head_branch }} (by ${{ github.actor }}) ended with ${{ github.event.workflow_run.conclusion }}: ${{ github.event.workflow_run.html_url }}

  build-error:
    name: "Build Error"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'workflow_run' && github.event.workflow_run.name == 'MPTCP Upstream Build Validation' && startsWith(github.event.workflow_run.head_branch, 'export/') && github.event.workflow_run.conclusion != 'success'
    runs-on: ubuntu-latest
    steps:
      - name: irc build
        uses: rectalogic/notify-irc@v1
        with:
          server: irc.libera.chat
          channel: "#mptcp"
          nickname: gh-build-bot
          message: |-
            New build validating ${{ github.event.workflow_run.head_branch }} (by ${{ github.actor }}) failed: ${{ github.event.workflow_run.conclusion }}: ${{ github.event.workflow_run.html_url }}

  topgit:
    name: "TopGit"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'workflow_run' && github.event.workflow_run.name == 'Update TopGit tree' && github.event.workflow_run.conclusion != 'success'
    runs-on: ubuntu-latest
    steps:
      - name: irc topgit
        uses: rectalogic/notify-irc@v1
        with:
          server: irc.libera.chat
          channel: "#mptcp"
          nickname: gh-topgit-bot
          message: |-
            New sync with latest net-next failed (initiated by ${{ github.actor }}): ${{ github.event.workflow_run.conclusion }}
            ${{ github.event.workflow_run.html_url }}

  tests:
    name: "Tests"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'check_suite' && github.event.check_suite.app.name == 'Cirrus CI' && github.event.check_suite.conclusion != 'neutral'
    runs-on: ubuntu-latest
    env:
      ACCEPT: "Accept: application/vnd.github.v3+json"
      URI: "https://api.github.com"
    steps:
      - name: get linked tag
        id: tag
        run: |
          TAG=$(curl -H "${ACCEPT}" "${URL}" | jq -r ".[] | select(.object.sha == \"${SHA}\").ref" | tail -n1)
          echo "Found: ${TAG}"
          echo "::set-output name=tag::${TAG:10}"
        env:
          URL: "${{ env.URI }}/repos/${{ github.repository }}/git/matching-refs/tags/"
          SHA: "${{ github.event.check_suite.head_sha }}"

      # inspired by: https://cirrus-ci.org/guide/notifications/
      - name: get cirrus status
        if: startsWith(steps.tag.outputs.tag, 'export/')
        id: cirrus
        run: |
          curl -H "${ACCEPT}" "${URL}" > check-runs.json
          jq -r '.check_runs[] | select(.conclusion != "neutral")' check-runs.json > check-runs_strip.json

          i=0
          for id in $(jq -r '.external_id' check-runs_strip.json); do
            echo "${i}: Found ID: ${id}"
            ccl_url="https://api.cirrus-ci.com/v1/artifact/task/${id}/conclusion/conclusion.txt"

            echo -n "::set-output name=ccl_${i}::"
            echo "$(curl -q "${ccl_url}" || echo "${i}: Unable to get the conclusion")"

            i=$((i+1))
          done

          i=0
          for url in $(jq -r '.details_url' check-runs_strip.json); do
            echo "${i}: URL: ${url}"

            echo "::set-output name=url_${i}::${url}"

            i=$((i+1))
          done

          # extra debug if nothing was found
          if [ ${i} -eq 0 ]; then
            jq '.' check-runs.json
            jq '.' check-runs_strip.json
          fi
        env:
          URL: "${{ env.URI }}/repos/${{ github.repository }}/check-suites/${{ github.event.check_suite.id }}/check-runs?status=completed"

      - name: irc tests
        if: startsWith(steps.tag.outputs.tag, 'export/')
        uses: rectalogic/notify-irc@v1
        with:
          server: irc.libera.chat
          channel: "#mptcp-ci"
          nickname: gh-tests-bot
          message: |-
            New Tests job validating ${{ steps.tag.outputs.tag }} (by ${{ github.actor }}) just ended:
            - ${{ steps.cirrus.outputs.ccl_0 }}: ${{ steps.cirrus.outputs.url_0 }}
            - ${{ steps.cirrus.outputs.ccl_1 }}: ${{ steps.cirrus.outputs.url_1 }}
